@{
    Layout = null;
}
<div class="pure-g">
    <a href="javascript:;" onclick="Admin.loadContent_Jq('main-content', '/Admin/Blog/TemplateManage');" class="pure-link pure-link-black">返回</a>
</div>
<h2>模板使用说明</h2>
<p>模板名:用于存储的文件名（建议用字母）（生成在/Views/Temp/目录下）</p>
<p>模板别名:用于识别模板的名字</p>
<p>
    模板参数:一个json的字符串，<br />
    <div style="font-weight:bold">格式[{ "key": "title", "value": "标题", "label": "标题", "tiplabel": "标题", "type": "1" }]</div>
    <br />
    数组内包含对象，对象内属性是<div style="font-weight:bold">key</div>(必填,用于模板数据填充的占位符，不能重复),<div style="font-weight:bold">value</div>(必填，用于模板数据填充的默认数据),<div style="font-weight:bold">label</div>(必填，参数标题),<div style="font-weight:bold">tiplabel</div>(选填，用于默认提示),<div style="font-weight:bold">type</div>(必填，1:文本框，2：富文本框)
</p>
<p>
    模板内容:razor模板内容，razor怎么写就怎么写（自由强大）,可以嵌套布局<br />
    var obj = ViewData["Data"] as Newtonsoft.Json.Linq.JObject; 在模板里面使用json对象调用，剩下的就是填充obj[你定义的key]，富文本记得用@@Html.Raw编码
</p>

<h1>例子</h1>
<p>
    [{ "key": "title", "value": "标题", "label": "标题", "tiplabel": "标题", "type": "1" }, { "key": "content", "value": "内容", "label": "内容", "type": "2" }]
</p>
<p>
    <code>
@@{<br />
            Layout = &quot;~/Views/Shared/_BlogLayout.cshtml&quot;;<br />
            var obj = ViewData[&quot;Data&quot;] as Newtonsoft.Json.Linq.JObject;<br />
}<br />
        &lt;form class=&quot;pure-form pure-search pure-g&quot; action=&quot;@@Url.Action(&quot;Search&quot;, &quot;Blog&quot;)&quot; method=&quot;get&quot;&gt;<br />
        &lt;input type=&quot;text&quot; placeholder=&quot;输入你的关键字&quot;&gt;<br />
        &lt;button type=&quot;submit&quot; class=&quot;pure-button pure-button-primary&quot;&gt;搜索&lt;/button&gt;<br />
        &lt;/form&gt;<br />
        &lt;div class=&quot;posts&quot;&gt;<br />
        &lt;section class=&quot;post&quot;&gt;<br />
        &lt;header class=&quot;post-header&quot;&gt;<br />
        &lt;h2 class=&quot;post-title&quot;&gt;@@(obj[&quot;title&quot;].ToString())&lt;/h2&gt;<br />
        &lt;p class=&quot;post-meta&quot;&gt;<br />
        发表于 @@(DateTime.Now.ToString(&quot;yyyy-MM-dd HH:mm:ss&quot;)<br />
&lt;/p&gt;<br />
        &lt;/header&gt;<br />
&lt;div class=&quot;post-description-detail&quot;&gt;<br />
    @@Html.Raw(obj[&quot;content&quot;].ToString())<br />
&lt;/div&gt;<br />
&lt;/div&gt;<br />
    &lt;/section&gt;<br />
&lt;/div&gt;<br />
    </code>
</p>